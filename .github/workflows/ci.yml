name: CI Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
  schedule:
    # Run tests weekly on Monday at 00:00 UTC
    - cron: '0 0 * * 1'

jobs:
  syntax-validation:
    name: Ansible Syntax Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible ansible-lint

      - name: Run syntax validation
        run: |
          chmod +x tests/syntax/validate_ansible.sh
          tests/syntax/validate_ansible.sh

      - name: Upload syntax results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: syntax-validation-results
          path: /tmp/ansible-syntax-*.log
          retention-days: 30

  debian-tests:
    name: Debian Tests
    runs-on: ubuntu-latest
    needs: syntax-validation

    strategy:
      matrix:
        debian_version: ['11', '12']

    container:
      image: debian:${{ matrix.debian_version }}

    steps:
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y git sudo curl wget python3 python3-pip

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Ansible
        run: |
          pip3 install ansible

      - name: Run playbook (check mode)
        run: |
          if [ -f playbook.yml ]; then
            ansible-playbook playbook.yml --check --diff || true
          fi

      - name: Run Debian-specific tests
        run: |
          chmod +x tests/os-specific/test_debian.sh
          tests/os-specific/test_debian.sh || true

  ubuntu-tests:
    name: Ubuntu Tests
    runs-on: ubuntu-latest
    needs: syntax-validation

    strategy:
      matrix:
        ubuntu_version: ['20.04', '22.04', '24.04']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Run playbook (check mode)
        run: |
          if [ -f playbook.yml ]; then
            ansible-playbook playbook.yml --check --diff || true
          fi

      - name: Run Debian/Ubuntu tests
        run: |
          chmod +x tests/os-specific/test_debian.sh
          tests/os-specific/test_debian.sh

      - name: Run functional tests
        run: |
          chmod +x tests/functional/test_installations.sh
          tests/functional/test_installations.sh || true

  macos-tests:
    name: macOS Tests
    runs-on: macos-latest
    needs: syntax-validation

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Run playbook (check mode)
        run: |
          if [ -f playbook.yml ]; then
            ansible-playbook playbook.yml --check --diff || true
          fi

      - name: Run macOS-specific tests
        run: |
          chmod +x tests/os-specific/test_macos.sh
          tests/os-specific/test_macos.sh

      - name: Run functional tests
        run: |
          chmod +x tests/functional/test_installations.sh
          tests/functional/test_installations.sh || true

  idempotency-tests:
    name: Idempotency Testing
    runs-on: ubuntu-latest
    needs: [debian-tests, ubuntu-tests]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Run idempotency tests
        run: |
          chmod +x tests/idempotency/test_idempotency.sh
          if [ -f playbook.yml ]; then
            tests/idempotency/test_idempotency.sh || true
          else
            echo "No playbook.yml found, skipping idempotency tests"
          fi

      - name: Upload idempotency results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: idempotency-test-results
          path: /tmp/ansible-idempotency-tests/
          retention-days: 30

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [debian-tests, ubuntu-tests, macos-tests]
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Run full playbook
        run: |
          if [ -f playbook.yml ]; then
            ansible-playbook playbook.yml --check --diff -vv
          fi

      - name: Run all functional tests
        run: |
          chmod +x tests/functional/test_installations.sh
          tests/functional/test_installations.sh || true

  test-results:
    name: Publish Test Results
    runs-on: ubuntu-latest
    needs: [syntax-validation, debian-tests, ubuntu-tests, macos-tests, idempotency-tests]
    if: always()

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Publish test summary
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Syntax validation: Completed" >> $GITHUB_STEP_SUMMARY
          echo "✅ Debian tests: Completed" >> $GITHUB_STEP_SUMMARY
          echo "✅ Ubuntu tests: Completed" >> $GITHUB_STEP_SUMMARY
          echo "✅ macOS tests: Completed" >> $GITHUB_STEP_SUMMARY
          echo "✅ Idempotency tests: Completed" >> $GITHUB_STEP_SUMMARY
